{"version":3,"sources":["components/FlexboxGrid.js","components/PaperSheet.js","pages/About.js","components/Error.js","components/Loading.js","lib/queries.js","components/CapacityMessageList.js","pages/Settings.js","lib/mutations.js","components/SaunaEdit.js","pages/Sauna.js","components/SaunaListItem.js","components/SaunaList.js","pages/Saunas.js","components/VisitorList.js","pages/Visitors.js","pages/Index.js","components/CapacityMessageEdit.js","pages/CapacityMessage.js","components/Notification.js","components/AppRouter.js","components/Apollo.js","components/Theme.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","flexGrow","_ref","classes","children","react_default","a","createElement","className","Grid_default","container","spacing","item","xs","sm","md","Object","objectSpread","mixins","gutters","paddingTop","unit","paddingBottom","Paper_default","elevation","textAlign","Typography_default","variant","gutterBottom","Error","Loading","CAPACITY_MESSAGE","gql","_templateObject","ALL_CAPACITY_MESSAGES","_templateObject2","SAUNA","_templateObject3","ALL_SAUNAS","_templateObject4","ALL_VISITORS","_templateObject5","NOTIFICATION","_templateObject6","CapacityMessagesList","react_apollo_browser_umd","query","loading","error","data","components_Loading","components_Error","List_default","allCapacityMessages","map","capacityMessage","Link","key","_id","to","concat","ListItem_default","ListItemText_default","primary","message","secondary","percentage","CapacityMessageList","CREATE_VISITOR","mutations_templateObject","UPDATE_SAUNA","mutations_templateObject2","UPDATE_CAPACITY_MESSAGE","mutations_templateObject3","SaunaEdit","state","_this","props","sauna","handleChange","name","event","setState","defineProperty","target","value","_this$state","this","max_seats","_this$props","TextField_default","label","textField","onChange","margin","type","mutation","variables","id","Number","refetchQueries","updateSauna","_ref3","client","writeData","notification","notification_id","Button_default","color","button","onClick","React","Component","marginLeft","marginRight","width","_ref2","SaunaEdit_SaunaEdit","Sauna","match","components_SaunaEdit","params","divider","marginTop","marginBottom","Divider_default","light","current_seats","capacity_message","sauna_id","createVisitor","aria-label","Add_default","fontSize","console","log","Remove_default","SaunaList","allSaunas","components_SaunaListItem","Saunas","components_SaunaList","VisitorList","allVisitors","visitor","AddCircle_default","RemoveCircle_default","Date","created","toString","Visitors","components_VisitorList","Index","pages_Saunas","CapacityMessageEdit","updateCapacityMessage","CapacityMessageEdit_CapacityMessageEdit","CapacityMessage","components_CapacityMessageEdit","Notification","open","toggleNotification","_this2","Snackbar_default","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","AppRouter","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","drawerOpen","BrowserRouter","FlexboxGrid","components_Notification","AppBar_default","position","Toolbar_default","IconButton_default","Menu_default","Drawer_default","MenuItem_default","ListItemIcon_default","Close_default","Home_default","History_default","Settings_default","Info_default","components_PaperSheet","Route","exact","path","component","About","Settings","ApolloClient","uri","process","clientState","resolvers","Apollo","createMuiTheme","typography","useNextVariants","Theme","core_styles","App","components_Apollo","components_Theme","components_AppRouter","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f046d73e.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n})\n\nconst FlexBoxGrid = ({ classes, children }) => (\n    <div className={classes.root}>\n        <Grid container spacing={24}>\n            <Grid item xs={12} sm={1} md={2}>\n            </Grid>\n            <Grid item xs={12} sm={10} md={8}>\n                {children}\n            </Grid>\n            <Grid item xs={12} sm={1} md={2}>\n            </Grid>\n        </Grid>\n    </div>\n)\n\nFlexBoxGrid.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(FlexBoxGrid)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n})\n\nconst PaperSheet = ({children, classes}) => (\n    <Paper className={classes.root} elevation={1}>\n        {children}\n    </Paper>\n)\n\nPaperSheet.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PaperSheet)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    root: {\n        textAlign: 'center',\n        paddingTop: theme.spacing.unit * 20,\n        paddingBottom: theme.spacing.unit * 20,\n    },\n})\n\nconst About = ({classes}) => (\n    <div className={classes.root}>\n        <Typography variant=\"h3\" gutterBottom>\n            About\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n            Give a short explanation about this application.\n        </Typography>\n    </div>\n)\n\nAbout.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(About)","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nconst Error = () => (\n    <Typography variant=\"body1\">\n        Error :(\n    </Typography>\n)\n\nexport default Error","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nconst Loading = () => (\n    <Typography variant=\"body1\">\n        Loading...\n    </Typography>\n)\n\nexport default Loading","import gql from 'graphql-tag'\n\nconst CAPACITY_MESSAGE = gql`\nquery capacityMessage($id: String) {\n    capacityMessage(id: $id) {\n        _id\n        message\n    }\n}\n`\nconst ALL_CAPACITY_MESSAGES = gql`\n{\n    allCapacityMessages{\n        _id\n        percentage\n        message\n    }\n}\n`\nconst SAUNA = gql`\nquery sauna($id: String) {\n    sauna(id: $id) {\n        _id\n        name\n        max_seats\n    }\n}\n`\nconst ALL_SAUNAS = gql`\n{\n    allSaunas {\n        name\n        max_seats\n        current_seats\n        _id\n        capacity_message\n    }\n}\n`\nconst ALL_VISITORS = gql`\n{\n    allVisitors{\n        _id\n        value\n        created\n        sauna {\n            name\n        }\n    }\n}\n`\n\nconst NOTIFICATION = gql`\n{\n    notification @client\n    notification_id @client\n}\n`\n\nexport { \n    CAPACITY_MESSAGE,\n    ALL_CAPACITY_MESSAGES,\n    SAUNA,\n    ALL_SAUNAS,\n    ALL_VISITORS,\n    NOTIFICATION,\n}","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Error from './Error'\nimport Loading from './Loading'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { Link } from 'react-router-dom'\nimport { ALL_CAPACITY_MESSAGES } from '../lib/queries'\n\nconst CapacityMessagesList = () => (\n    <Query query={ALL_CAPACITY_MESSAGES}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (\n                <List>\n                    {data.allCapacityMessages.map((capacityMessage) => (\n                        <Link key={capacityMessage._id} to={`/capacity_message/${capacityMessage._id}`}>\n                            <ListItem>\n                                <ListItemText primary={capacityMessage.message} secondary={`${capacityMessage.percentage}% Nachricht`} />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            )\n        }}\n    </Query>\n)\n\nexport default CapacityMessagesList","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport CapacityMessageList from '../components/CapacityMessageList'\n\nconst styles = theme => ({\n    root: {\n    },\n})\n\nconst About = ({classes}) => (\n    <div className={classes.root}>\n        <Typography variant=\"h3\" gutterBottom>\n            Einstellungen\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n            Auf dieser Seite können Sie die Kapazitätsmeldungen verwalten.\n        </Typography>\n        <CapacityMessageList />\n    </div>\n)\n\nAbout.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(About)","import gql from 'graphql-tag'\n\nconst CREATE_VISITOR = gql`\nmutation createVisitor($value: Int!, $sauna_id: String!) {\n    createVisitor(value: $value, sauna_id: $sauna_id) {\n        _id\n    }\n}\n`\nconst UPDATE_SAUNA = gql`\nmutation updateSauna($id: String!, $name: String, $max_seats: Int) {\n    updateSauna(id: $id, name: $name, max_seats: $max_seats) {\n        success\n    }\n}\n`\n\nconst UPDATE_CAPACITY_MESSAGE = gql`\nmutation updateCapacityMessage($id: String!, $message: String, $percentage: Int) {\n    updateCapacityMessage(id: $id, message: $message, percentage: $percentage) {\n        success\n    }\n}\n`\n\nexport {\n    CREATE_VISITOR,\n    UPDATE_SAUNA,\n    UPDATE_CAPACITY_MESSAGE,\n}","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Typography from '@material-ui/core/Typography'\nimport Error from './Error'\nimport Loading from './Loading'\nimport { SAUNA, ALL_SAUNAS } from '../lib/queries'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport { UPDATE_SAUNA } from '../lib/mutations'\nimport { Mutation } from 'react-apollo'\n\nconst styles = theme => ({\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n})\n\nconst SaunaEditContainer = ({id, classes}) => (\n    <Query variables={{id}} query={SAUNA}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (\n                <SaunaEdit sauna={data.sauna} classes={classes} />                \n            )\n        }}\n    </Query>\n)\n\nclass SaunaEdit extends React.Component {\n\n    state = this.props.sauna\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        })\n    }\n    \n    render () {\n        const { name, max_seats } = this.state\n        const { classes, sauna } = this.props\n\n        return (\n\n            <form>\n                <Typography variant=\"h5\" gutterBottom>\n                    Bearbeiten: {sauna.name}\n                </Typography>\n                <TextField\n                    label=\"Name\"\n                    className={classes.textField}\n                    value={name}\n                    onChange={this.handleChange('name')}\n                    margin=\"normal\"\n                />\n                <br />\n                <TextField\n                    label=\"Maximale Anzahl Plätze\"\n                    className={classes.textField}\n                    value={max_seats}\n                    onChange={this.handleChange('max_seats')}\n                    type=\"number\"\n                    margin=\"normal\"\n                />\n                <br />\n                <Mutation mutation={UPDATE_SAUNA} variables={{id: sauna._id, name: name, max_seats: Number(max_seats) }} refetchQueries={[{query: ALL_SAUNAS}]}>\n                {(updateSauna, { data, client }) => {\n\n                    if(data){\n                        client.writeData({ data: { notification: \"Nachricht gespeichert\", notification_id: sauna._id } })\n                    }\n\n                   return (\n                        <Link to=\"/saunas\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                onClick={() => updateSauna()}\n                            >\n                                Speichern\n                            </Button>\n                        </Link>\n                    )\n\n                }}\n                </Mutation>\n                <Link to=\"/saunas\">\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\n                        Abbrechen\n                    </Button>\n                </Link>\n            </form>\n        )\n    }\n}\n\nexport default withStyles(styles)(SaunaEditContainer)","import React from 'react'\nimport SaunaEdit from '../components/SaunaEdit'\n\nconst Sauna = ({ match }) => (\n    <div>\n        <SaunaEdit id={ match.params.id } />\n    </div>\n)\n\nexport default Sauna","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport { Mutation } from 'react-apollo'\nimport { Link } from 'react-router-dom'\nimport Divider from '@material-ui/core/Divider'\nimport { ALL_SAUNAS } from '../lib/queries'\nimport { CREATE_VISITOR } from '../lib/mutations'\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    divider: {\n        marginTop:  theme.spacing.unit,\n        marginBottom:  theme.spacing.unit,\n    }\n})\n\nconst SaunaListItem = ({ sauna, classes }) => (\n    <div>\n        <Divider light className={classes.divider} />\n        <Typography variant=\"h4\">\n            {sauna.name}\n        </Typography>\n        <Link to={`/sauna/${sauna._id}`}>\n            <Typography variant=\"body1\" gutterBottom>\n                Bearbeiten\n            </Typography>\n        </Link>\n        <Typography variant=\"body1\" gutterBottom>\n            Auslastung: {sauna.current_seats}/{sauna.max_seats}\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            Statusnachricht: {sauna.capacity_message}\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            Ein- und Ausgang der Besucher registrieren:\n        </Typography>\n        <Mutation mutation={CREATE_VISITOR} variables={{ value: 1, sauna_id: sauna._id }} refetchQueries={[{query: ALL_SAUNAS}]}>\n            {(createVisitor, { data, client }) => {\n\n                if(data){\n                    client.writeData({ data: { notification: \"Visitor added\", notification_id: data.createVisitor._id } })\n                }\n\n                return (\n                    <Button \n                        variant=\"fab\"\n                        color=\"primary\"\n                        aria-label=\"Hinzufügen\"\n                        className={classes.button}\n                        onClick={() => createVisitor()\n                    }>\n                        <AddIcon fontSize=\"small\" />\n                    </Button>\n                )\n            }}\n        </Mutation>\n        <Mutation mutation={CREATE_VISITOR} variables={{ value: -1, sauna_id: sauna._id }} refetchQueries={[{query: ALL_SAUNAS}]}>\n            {(createVisitor, { data, client }) => {\n                \n                console.log(data)\n\n                if(data){\n                    client.writeData({ data: { notification: \"Visitor removed\", notification_id: data.createVisitor._id } })\n                }\n\n                return (\n                    <Button \n                        variant=\"fab\"\n                        color=\"secondary\"\n                        aria-label=\"Entfernen\"\n                        className={classes.button}\n                        onClick={() => createVisitor()}\n                    >\n                        <RemoveIcon fontSize=\"small\" />\n                    </Button>\n                )\n            }}\n        </Mutation>\n    </div>\n)\n\nSaunaListItem.propTypes = {\n    sauna: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(SaunaListItem)","import React from 'react'\nimport { Query } from 'react-apollo'\nimport SaunaListItem from './SaunaListItem'\nimport Error from './Error'\nimport Loading from './Loading'\nimport { ALL_SAUNAS } from '../lib/queries'\n\nconst SaunaList = () => (\n    <Query query={ALL_SAUNAS}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (\n                <div>\n                    {data.allSaunas.map((sauna) => (\n                        <SaunaListItem key={sauna._id} sauna={sauna} />\n                    ))}\n                </div>\n            )\n        }}\n    </Query>\n)\n\nexport default SaunaList","import React from 'react'\nimport SaunaList from '../components/SaunaList'\nimport Typography from '@material-ui/core/Typography'\n\nconst Saunas = () => (\n    <div>\n        <Typography variant=\"h3\" gutterBottom>\n            Saunas\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            Verwaltung der Saunalandschaften.\n        </Typography>\n        <SaunaList />\n    </div>\n)\n\nexport default Saunas","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Error from './Error'\nimport Loading from './Loading'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport { ALL_VISITORS } from '../lib/queries'\n\nconst VisitorList = () => (\n    <Query query={ALL_VISITORS}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (                    \n                <List>\n                    {data.allVisitors.map((visitor) => (\n                        <ListItem key={visitor._id}>\n                            {visitor.value === 1 ? <AddCircleIcon /> : <RemoveCircleIcon />}\n                            <ListItemText primary={(new Date(visitor.created)).toString()} secondary={visitor.sauna.name} />\n                        </ListItem>\n                    ))}\n                </List>\n            )\n        }}\n    </Query>\n)\n\nexport default VisitorList","import React from 'react'\nimport VisitorList from '../components/VisitorList'\nimport Typography from '@material-ui/core/Typography'\n\nconst Visitors = () => (\n    <div>\n        <Typography variant=\"h3\" gutterBottom>\n            Besucher\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            Liste aller Sauna Ein- und Ausgänge.\n        </Typography>\n        <VisitorList />\n    </div>\n)\n\nexport default Visitors","import React from 'react'\nimport Saunas from './Saunas'\n\nconst Index = () => (\n    <Saunas/>\n)\n\nexport default Index","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Typography from '@material-ui/core/Typography'\nimport Error from './Error'\nimport Loading from './Loading'\nimport { CAPACITY_MESSAGE, ALL_CAPACITY_MESSAGES } from '../lib/queries'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport { UPDATE_CAPACITY_MESSAGE } from '../lib/mutations'\nimport { Mutation } from 'react-apollo'\n\nconst styles = theme => ({\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200,\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n})\n\nconst CapacityMessageEditContainer = ({id, classes}) => (\n    <Query variables={{id}} query={CAPACITY_MESSAGE}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (\n                <CapacityMessageEdit capacityMessage={data.capacityMessage} classes={classes} />                \n            )\n        }}\n    </Query>\n)\n\nclass CapacityMessageEdit extends React.Component {\n\n    state = this.props.capacityMessage\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        })\n    }\n    \n    render () {\n        const { message } = this.state\n        const { classes, capacityMessage } = this.props\n\n        return (\n\n            <form>\n                <Typography variant=\"h5\" gutterBottom>\n                    Bearbeiten: {capacityMessage.message}\n                </Typography>\n                <TextField\n                    label=\"Nachricht\"\n                    className={classes.textField}\n                    value={message}\n                    onChange={this.handleChange('message')}\n                    margin=\"normal\"\n                />\n                <br />\n                <Mutation mutation={UPDATE_CAPACITY_MESSAGE} variables={{id: capacityMessage._id, message: message }} refetchQueries={[{query: ALL_CAPACITY_MESSAGES}]}>\n                {(updateCapacityMessage, { data, client }) => {\n\n                    if(data){\n                        client.writeData({ data: { notification: \"Nachricht gespeichert\", notification_id: capacityMessage._id } })\n                    }\n\n                   return (\n                        <Link to=\"/settings\">\n                            <Button \n                                variant=\"contained\"\n                                color=\"primary\" className={classes.button}\n                                onClick={() => updateCapacityMessage()}\n                            >\n                                Speichern\n                            </Button>\n                        </Link>\n                    )\n                }}\n                </Mutation>\n                <Link to=\"/settings\">\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\n                        Abbrechen\n                    </Button>\n                </Link>\n            </form>\n        )\n    }\n}\n\nexport default withStyles(styles)(CapacityMessageEditContainer)","import React from 'react'\nimport CapacityMessageEdit from '../components/CapacityMessageEdit'\n\nconst CapacityMessage = ({ match }) => (\n    <div>\n        <CapacityMessageEdit id={ match.params.id } />\n    </div>\n)\n\nexport default CapacityMessage","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { NOTIFICATION } from '../lib/queries'\nimport { withStyles } from '@material-ui/core/styles'\nimport Snackbar from '@material-ui/core/Snackbar'\n\nconst styles = theme => ({\n\n})\n\nclass Notification extends React.Component {\n\n    state = {\n        open: false,\n        notification: \"none\",\n        notification_id: null\n    }\n\n    toggleNotification = () => {\n        this.setState({\n            open: !this.state.open,\n        })\n    }\n    \n    render () {\n\n        return (\n\n            <Query query={NOTIFICATION}>\n            {({ data }) => {\n\n                console.log(data)\n\n                if(data.notification && data.notification_id !== this.state.notification_id) {\n                    this.setState({\n                        open: true,\n                        notification: data.notification,\n                        notification_id: data.notification_id,\n                    })\n                }\n\n                return (              \n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                        open={this.state.open}\n                        onClose={this.toggleNotification}\n                        autoHideDuration={3000}\n                        message={this.state.notification}\n                    />\n                )\n            }}\n            </Query>\n        )\n    }\n}\n\nexport default withStyles(styles)(Notification)","import React from 'react'\nimport FlexboxGrid from './FlexboxGrid'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Drawer from '@material-ui/core/Drawer'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport CloseIcon from '@material-ui/icons/Close'\nimport HomeIcon from '@material-ui/icons/Home'\nimport HistoryIcon from '@material-ui/icons/History'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport InfoIcon from '@material-ui/icons/Info'\nimport PaperSheet from './PaperSheet'\nimport About from '../pages/About'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Settings from '../pages/Settings'\nimport Sauna from '../pages/Sauna'\nimport Saunas from '../pages/Saunas'\nimport Visitors from '../pages/Visitors'\nimport Index from '../pages/Index'\nimport CapacityMessage from '../pages/CapacityMessage'\nimport Notification from './Notification'\n\nclass AppRouter extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {drawerOpen: false}\n    }\n\n    toggleDrawer = () => {\n        this.setState({drawerOpen: !this.state.drawerOpen})\n    }\n\n    render() {\n\n        return (\n            <Router>\n                <FlexboxGrid>\n                    <Notification />\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer}>\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" color=\"inherit\">\n                                Lorauna\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer open={this.state.drawerOpen}>\n                        <MenuItem onClick={this.toggleDrawer}>\n                            <ListItemIcon>\n                                <CloseIcon />\n                            </ListItemIcon>\n                            <ListItemText>Close</ListItemText>\n                        </MenuItem>\n                        <Link to=\"/saunas\">\n                            <MenuItem onClick={this.toggleDrawer}>\n                                <ListItemIcon>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText>Saunas</ListItemText>\n                            </MenuItem>\n                        </Link>\n                        <Link to=\"/visitors\">\n                            <MenuItem onClick={this.toggleDrawer}>\n                                <ListItemIcon>\n                                    <HistoryIcon />\n                                </ListItemIcon>\n                                <ListItemText>Visitors</ListItemText>\n                            </MenuItem>\n                        </Link>\n                        <Link to=\"/settings\">\n                            <MenuItem onClick={this.toggleDrawer}>\n                                <ListItemIcon>\n                                    <SettingsIcon />\n                                </ListItemIcon>\n                                <ListItemText>Settings</ListItemText>\n                            </MenuItem>\n                            </Link>\n                        <Link to=\"/about\">\n                            <MenuItem onClick={this.toggleDrawer}>\n                                <ListItemIcon>\n                                    <InfoIcon />\n                                </ListItemIcon>\n                                <ListItemText>About</ListItemText>\n                            </MenuItem>\n                        </Link>\n                    </Drawer>\n                    <PaperSheet>\n                        <Route exact path=\"/\" component={Index} />\n                        <Route path=\"/saunas\" component={Saunas} />\n                        <Route path=\"/sauna/:id\" component={Sauna} />\n                        <Route path=\"/visitors\" component={Visitors} />\n                        <Route path=\"/about\" component={About} />\n                        <Route path=\"/settings\" component={Settings} />\n                        <Route path=\"/capacity_message/:id\" component={CapacityMessage} />\n                    </PaperSheet>\n                </FlexboxGrid>\n            </Router>\n        )\n    }\n}\n\nexport default AppRouter","import ApolloClient from 'apollo-boost'\nimport React from 'react'\nimport { ApolloProvider } from 'react-apollo'\n\nconst client = new ApolloClient({\n\turi: process.env.REACT_APP_APOLLO_URL,\n\tclientState: {\n\t\tresolvers: {},\n\t}\n})\n\nconst Apollo = ({children}) => (\n\t<ApolloProvider client={client}>\n\t\t{children}\n  \t</ApolloProvider>\n)\n\nexport default Apollo","import React from 'react'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n})\n\nconst Theme = ({children}) => (\n    <MuiThemeProvider theme={theme}>\n        {children}\n    </MuiThemeProvider>\n)\n\nexport default Theme","import React, { Component } from 'react'\nimport './App.css'\nimport AppRouter from './components/AppRouter'\nimport Apollo from './components/Apollo'\nimport Theme from './components/Theme'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Apollo>\n                        <Theme>\n                            <AppRouter />\n                        </Theme>\n                    </Apollo>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t  // [::1] is the IPv6 localhost address.\n\t  window.location.hostname === '[::1]' ||\n\t  // 127.0.0.1/8 is considered localhost for IPv4.\n\t  window.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t  )\n  );\n  \n  export function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t  // The URL constructor is available in all browsers that support SW.\n\t  const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t  if (publicUrl.origin !== window.location.origin) {\n\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\treturn;\n\t  }\n  \n\t  window.addEventListener('load', () => {\n\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n\t\tif (isLocalhost) {\n\t\t  // This is running on localhost. Let's check if a service worker still exists or not.\n\t\t  checkValidServiceWorker(swUrl, config);\n  \n\t\t  // Add some additional logging to localhost, pointing developers to the\n\t\t  // service worker/PWA documentation.\n\t\t  navigator.serviceWorker.ready.then(() => {\n\t\t\tconsole.log(\n\t\t\t  'This web app is being served cache-first by a service ' +\n\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t);\n\t\t  });\n\t\t} else {\n\t\t  // Is not localhost. Just register service worker\n\t\t  registerValidSW(swUrl, config);\n\t\t}\n\t  });\n\t}\n  }\n  \n  function registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t  .register(swUrl)\n\t  .then(registration => {\n\t\tregistration.onupdatefound = () => {\n\t\t  const installingWorker = registration.installing;\n\t\t  installingWorker.onstatechange = () => {\n\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t  if (navigator.serviceWorker.controller) {\n\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t// content until all client tabs are closed.\n\t\t\t\tconsole.log(\n\t\t\t\t  'New content is available and will be used when all ' +\n\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t);\n  \n\t\t\t\t// Execute callback\n\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t  config.onUpdate(registration);\n\t\t\t\t}\n\t\t\t  } else {\n\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t// It's the perfect time to display a\n\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\tconsole.log('Content is cached for offline use.');\n  \n\t\t\t\t// Execute callback\n\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t  config.onSuccess(registration);\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t  };\n\t\t};\n\t  })\n\t  .catch(error => {\n\t\tconsole.error('Error during service worker registration:', error);\n\t  });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t  .then(response => {\n\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\tif (\n\t\t  response.status === 404 ||\n\t\t  response.headers.get('content-type').indexOf('javascript') === -1\n\t\t) {\n\t\t  // No service worker found. Probably a different app. Reload the page.\n\t\t  navigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister().then(() => {\n\t\t\t  window.location.reload();\n\t\t\t});\n\t\t  });\n\t\t} else {\n\t\t  // Service worker found. Proceed as normal.\n\t\t  registerValidSW(swUrl, config);\n\t\t}\n\t  })\n\t  .catch(() => {\n\t\tconsole.log(\n\t\t  'No internet connection found. App is running in offline mode.'\n\t\t);\n\t  });\n  }\n  \n  export function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t  navigator.serviceWorker.ready.then(registration => {\n\t\tregistration.unregister();\n\t  });\n\t}\n  }  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}