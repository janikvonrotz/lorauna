{"version":3,"sources":["components/FlexboxGrid.js","components/PaperSheet.js","pages/About.js","components/Error.js","components/Loading.js","lib/queries.js","components/CapacityMessageList.js","pages/Settings.js","components/SaunaEdit.js","pages/Sauna.js","lib/mutations.js","components/SaunaListItem.js","components/SaunaList.js","pages/Saunas.js","components/VisitorList.js","pages/Visitors.js","pages/Index.js","components/CapacityMessageEdit.js","pages/CapacityMessage.js","components/AppRouter.js","components/Apollo.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","flexGrow","_ref","classes","children","react_default","a","createElement","className","Grid_default","container","spacing","item","xs","sm","md","Object","objectSpread","mixins","gutters","paddingTop","unit","paddingBottom","Paper_default","elevation","textAlign","Typography_default","variant","gutterBottom","Error","Loading","CAPACITY_MESSAGE","gql","_templateObject","ALL_CAPACITY_MESSAGES","_templateObject2","SAUNA","_templateObject3","ALL_SAUNAS","_templateObject4","ALL_VISITORS","_templateObject5","CapacityMessagesList","react_apollo_browser_umd","query","loading","error","data","components_Loading","components_Error","List_default","allCapacityMessages","map","capacityMessage","Link","key","_id","to","concat","ListItem_default","ListItemText_default","primary","message","secondary","percentage","CapacityMessageList","SaunaEdit","id","variables","_ref2","sauna","name","Sauna","match","components_SaunaEdit","params","CREATE_VISITOR","mutations_templateObject","button","margin","divider","marginTop","marginBottom","Divider_default","light","current_seats","max_seats","capacity_message","mutation","value","sauna_id","refetchQueries","createVisitor","Button_default","color","aria-label","onClick","Add_default","fontSize","Snackbar_default","anchorOrigin","vertical","horizontal","open","Boolean","autoHideDuration","_ref3","Remove_default","SaunaList","allSaunas","components_SaunaListItem","Saunas","components_SaunaList","VisitorList","allVisitors","visitor","AddCircle_default","RemoveCircle_default","Date","created","toString","Visitors","components_VisitorList","Index","pages_Saunas","CapacityMessageEdit","CapacityMessage","components_CapacityMessageEdit","AppRouter","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","setState","drawerOpen","state","BrowserRouter","FlexboxGrid","AppBar_default","position","Toolbar_default","IconButton_default","Menu_default","Drawer_default","MenuItem_default","ListItemIcon_default","Close_default","Home_default","History_default","Settings_default","Info_default","components_PaperSheet","Route","exact","path","component","About","Settings","React","Component","client","ApolloClient","uri","process","Apollo","App","components_Apollo","components_AppRouter","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91056bba.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n})\n\nconst FlexBoxGrid = ({ classes, children }) => (\n    <div className={classes.root}>\n        <Grid container spacing={24}>\n            <Grid item xs={12} sm={1} md={2}>\n            </Grid>\n            <Grid item xs={12} sm={10} md={8}>\n                {children}\n            </Grid>\n            <Grid item xs={12} sm={1} md={2}>\n            </Grid>\n        </Grid>\n    </div>\n)\n\nFlexBoxGrid.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(FlexBoxGrid)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\nconst styles = theme => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing.unit * 2,\n        paddingBottom: theme.spacing.unit * 2,\n    },\n})\n\nconst PaperSheet = ({children, classes}) => (\n    <Paper className={classes.root} elevation={1}>\n        {children}\n    </Paper>\n)\n\nPaperSheet.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PaperSheet)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n    root: {\n        textAlign: 'center',\n        paddingTop: theme.spacing.unit * 20,\n        paddingBottom: theme.spacing.unit * 20,\n    },\n})\n\nconst About = ({classes}) => (\n    <div className={classes.root}>\n        <Typography variant=\"h3\" gutterBottom>\n            About\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n            Give a short explanation about this application.\n        </Typography>\n    </div>\n)\n\nAbout.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(About)","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nconst Error = () => (\n    <Typography variant=\"body1\">\n        Error :(\n    </Typography>\n)\n\nexport default Error","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nconst Loading = () => (\n    <Typography variant=\"body1\">\n        Loading...\n    </Typography>\n)\n\nexport default Loading","import gql from 'graphql-tag'\n\nconst CAPACITY_MESSAGE = gql`\nquery capacityMessage($id: String) {\n    capacityMessage(id: $id) {\n        message\n    }\n}\n`\nconst ALL_CAPACITY_MESSAGES = gql`\n{\n    allCapacityMessages{\n        _id\n        percentage\n        message\n    }\n}\n`\nconst SAUNA = gql`\nquery sauna($id: String) {\n    sauna(id: $id) {\n        name\n    }\n}\n`\nconst ALL_SAUNAS = gql`\n{\n    allSaunas {\n        name\n        max_seats\n        current_seats\n        _id\n        capacity_message\n    }\n}\n`\nconst ALL_VISITORS = gql`\n{\n    allVisitors{\n        _id\n        value\n        created\n        sauna {\n            name\n        }\n    }\n}\n`\n\nexport { \n    CAPACITY_MESSAGE,\n    ALL_CAPACITY_MESSAGES,\n    SAUNA,\n    ALL_SAUNAS,\n    ALL_VISITORS,\n}","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Error from './Error'\nimport Loading from './Loading'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { Link } from 'react-router-dom'\nimport { ALL_CAPACITY_MESSAGES } from '../lib/queries'\n\nconst CapacityMessagesList = () => (\n    <Query query={ALL_CAPACITY_MESSAGES}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (\n                <List>\n                    {data.allCapacityMessages.map((capacityMessage) => (\n                        <Link key={capacityMessage._id} to={`/capacity_message/${capacityMessage._id}`}>\n                            <ListItem>\n                                <ListItemText primary={capacityMessage.message} secondary={`${capacityMessage.percentage}% Nachricht`} />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            )\n        }}\n    </Query>\n)\n\nexport default CapacityMessagesList","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport CapacityMessageList from '../components/CapacityMessageList'\n\nconst styles = theme => ({\n    root: {\n    },\n})\n\nconst About = ({classes}) => (\n    <div className={classes.root}>\n        <Typography variant=\"h3\" gutterBottom>\n            Einstellungen\n        </Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n            Auf dieser Seite können Sie die Kapazitätsmeldungen verwalten.\n        </Typography>\n        <CapacityMessageList />\n    </div>\n)\n\nAbout.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(About)","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Typography from '@material-ui/core/Typography'\nimport Error from './Error'\nimport Loading from './Loading'\nimport { SAUNA } from '../lib/queries'\n\nconst SaunaEdit = ({id}) => (\n    <Query variables={{id}} query={SAUNA}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (\n                <Typography variant=\"body1\" gutterBottom>\n                    {data.sauna.name}\n                </Typography>\n            )\n        }}\n    </Query>\n)\n\nexport default SaunaEdit","import React from 'react'\nimport SaunaEdit from '../components/SaunaEdit'\nimport Typography from '@material-ui/core/Typography'\n\nconst Sauna = ({ match }) => (\n    <div>\n        <Typography variant=\"h3\" gutterBottom>\n            Sauna\n        </Typography>\n        <SaunaEdit id={ match.params.id } />\n    </div>\n)\n\nexport default Sauna","import gql from 'graphql-tag'\n\nconst CREATE_VISITOR = gql`\nmutation createVisitor($value: Int!, $sauna_id: String!) {\n    createVisitor(value: $value, sauna_id: $sauna_id) {\n        _id\n    }\n}\n`\n\nexport {\n    CREATE_VISITOR,\n}","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport AddIcon from '@material-ui/icons/Add'\nimport RemoveIcon from '@material-ui/icons/Remove'\nimport { Mutation } from 'react-apollo'\nimport { Link } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Divider from '@material-ui/core/Divider'\nimport { ALL_SAUNAS } from '../lib/queries'\nimport { CREATE_VISITOR } from '../lib/mutations'\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    divider: {\n        marginTop:  theme.spacing.unit,\n        marginBottom:  theme.spacing.unit,\n    }\n})\n\nconst SaunaListItem = ({ sauna, classes }) => (\n    <div>\n        <Divider light className={classes.divider} />\n        <Typography variant=\"h4\">\n            {sauna.name}\n        </Typography>\n        <Link to={`/sauna/${sauna._id}`}>\n            <Typography variant=\"body1\" gutterBottom>\n                Bearbeiten\n            </Typography>\n        </Link>\n        <Typography variant=\"body1\" gutterBottom>\n            Auslastung: {sauna.current_seats}/{sauna.max_seats}\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            Statusnachricht: {sauna.capacity_message}\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            Ein- und Ausgang der Besucher registrieren:\n        </Typography>\n        <Mutation mutation={CREATE_VISITOR} variables={{ value: 1, sauna_id: sauna._id }} refetchQueries={[{query: ALL_SAUNAS}]}>\n            {(createVisitor, { data }) => (\n                <span>\n                    <Button variant=\"fab\" color=\"primary\" aria-label=\"Add\" className={classes.button} onClick={() => createVisitor()}>\n                        <AddIcon fontSize=\"small\" />\n                    </Button>\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                        open={Boolean(data)}\n                        autoHideDuration={6000}\n                        message=\"Visitor added!\"\n                    />\n                </span>\n            )}\n        </Mutation>\n        <Mutation mutation={CREATE_VISITOR} variables={{ value: -1, sauna_id: sauna._id }} refetchQueries={[{query: ALL_SAUNAS}]}>\n            {(createVisitor, { data }) => (\n                <span>\n                    <Button variant=\"fab\" color=\"secondary\" aria-label=\"Remove\" className={classes.button} onClick={() => createVisitor()}>\n                        <RemoveIcon fontSize=\"small\" />\n                    </Button>\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                        open={Boolean(data)}\n                        autoHideDuration={6000}\n                        message=\"Visitor removed!\"\n                    />\n                </span>\n            )}\n        </Mutation>\n    </div>\n)\n\nSaunaListItem.propTypes = {\n    sauna: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(SaunaListItem)","import React from 'react'\nimport { Query } from 'react-apollo'\nimport SaunaListItem from './SaunaListItem'\nimport Error from './Error'\nimport Loading from './Loading'\nimport { ALL_SAUNAS } from '../lib/queries'\n\nconst SaunaList = () => (\n    <Query query={ALL_SAUNAS}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (\n                <div>\n                    {data.allSaunas.map((sauna) => (\n                        <SaunaListItem key={sauna._id} sauna={sauna} />\n                    ))}\n                </div>\n            )\n        }}\n    </Query>\n)\n\nexport default SaunaList","import React from 'react'\nimport SaunaList from '../components/SaunaList'\nimport Typography from '@material-ui/core/Typography'\n\nconst Saunas = () => (\n    <div>\n        <Typography variant=\"h3\" gutterBottom>\n            Saunas\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            Verwaltung der Saunalandschaften.\n        </Typography>\n        <SaunaList />\n    </div>\n)\n\nexport default Saunas","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Error from './Error'\nimport Loading from './Loading'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle'\nimport { ALL_VISITORS } from '../lib/queries'\n\nconst VisitorList = () => (\n    <Query query={ALL_VISITORS}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (                    \n                <List>\n                    {data.allVisitors.map((visitor) => (\n                        <ListItem key={visitor._id}>\n                            {visitor.value === 1 ? <AddCircleIcon /> : <RemoveCircleIcon />}\n                            <ListItemText primary={(new Date(visitor.created)).toString()} secondary={visitor.sauna.name} />\n                        </ListItem>\n                    ))}\n                </List>\n            )\n        }}\n    </Query>\n)\n\nexport default VisitorList","import React from 'react'\nimport VisitorList from '../components/VisitorList'\nimport Typography from '@material-ui/core/Typography'\n\nconst Visitors = () => (\n    <div>\n        <Typography variant=\"h3\" gutterBottom>\n            Besucher\n        </Typography>\n        <Typography variant=\"body1\" gutterBottom>\n            Liste aller Sauna Ein- und Ausgänge.\n        </Typography>\n        <VisitorList />\n    </div>\n)\n\nexport default Visitors","import React from 'react'\nimport Saunas from './Saunas'\n\nconst Index = () => (\n    <Saunas/>\n)\n\nexport default Index","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Typography from '@material-ui/core/Typography'\nimport Error from './Error'\nimport Loading from './Loading'\nimport { CAPACITY_MESSAGE } from '../lib/queries'\n\nconst CapacityMessageEdit = ({id}) => (\n    <Query variables={{id}} query={CAPACITY_MESSAGE}>\n        {({ loading, error, data }) => {\n\n            if (loading) return <Loading />\n            if (error) return <Error />\n\n            return (                 \n                <Typography variant=\"body1\" gutterBottom>\n                    {data.capacityMessage.message}\n                </Typography>\n            )\n        }}\n    </Query>\n)\n\nexport default CapacityMessageEdit","import React from 'react'\nimport CapacityMessageEdit from '../components/CapacityMessageEdit'\nimport Typography from '@material-ui/core/Typography'\n\nconst CapacityMessage = ({ match }) => (\n    <div>\n        <Typography variant=\"h3\" gutterBottom>\n            Kapazitätsmeldung\n        </Typography>\n        <CapacityMessageEdit id={ match.params.id } />\n        </div>\n)\n\nexport default CapacityMessage","import React from 'react'\nimport FlexboxGrid from './FlexboxGrid'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Drawer from '@material-ui/core/Drawer'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport CloseIcon from '@material-ui/icons/Close'\nimport HomeIcon from '@material-ui/icons/Home'\nimport HistoryIcon from '@material-ui/icons/History'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport InfoIcon from '@material-ui/icons/Info'\nimport PaperSheet from './PaperSheet'\nimport About from '../pages/About'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Settings from '../pages/Settings'\nimport Sauna from '../pages/Sauna'\nimport Saunas from '../pages/Saunas'\nimport Visitors from '../pages/Visitors'\nimport Index from '../pages/Index'\nimport CapacityMessage from '../pages/CapacityMessage'\n\nclass AppRouter extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {drawerOpen: false}\n    }\n\n    toggleDrawer = () => {\n        this.setState({drawerOpen: !this.state.drawerOpen})\n    }\n\n    render() {\n\n        return (\n            <Router>\n                <FlexboxGrid>\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <IconButton color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer}>\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" color=\"inherit\">\n                                Lorauna\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer open={this.state.drawerOpen}>\n                        <MenuItem onClick={this.toggleDrawer}>\n                            <ListItemIcon>\n                                <CloseIcon />\n                            </ListItemIcon>\n                            <ListItemText>Close</ListItemText>\n                        </MenuItem>\n                        <Link to=\"/saunas\">\n                            <MenuItem onClick={this.toggleDrawer}>\n                                <ListItemIcon>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText>Saunas</ListItemText>\n                            </MenuItem>\n                        </Link>\n                        <Link to=\"/visitors\">\n                            <MenuItem onClick={this.toggleDrawer}>\n                                <ListItemIcon>\n                                    <HistoryIcon />\n                                </ListItemIcon>\n                                <ListItemText>Visitors</ListItemText>\n                            </MenuItem>\n                        </Link>\n                        <Link to=\"/settings\">\n                            <MenuItem onClick={this.toggleDrawer}>\n                                <ListItemIcon>\n                                    <SettingsIcon />\n                                </ListItemIcon>\n                                <ListItemText>Settings</ListItemText>\n                            </MenuItem>\n                            </Link>\n                        <Link to=\"/about\">\n                            <MenuItem onClick={this.toggleDrawer}>\n                                <ListItemIcon>\n                                    <InfoIcon />\n                                </ListItemIcon>\n                                <ListItemText>About</ListItemText>\n                            </MenuItem>\n                        </Link>\n                    </Drawer>\n                    <PaperSheet>\n                        <Route exact path=\"/\" component={Index} />\n                        <Route path=\"/saunas\" component={Saunas} />\n                        <Route path=\"/sauna/:id\" component={Sauna} />\n                        <Route path=\"/visitors\" component={Visitors} />\n                        <Route path=\"/about\" component={About} />\n                        <Route path=\"/settings\" component={Settings} />\n                        <Route path=\"/capacity_message/:id\" component={CapacityMessage} />\n                    </PaperSheet>\n                </FlexboxGrid>\n            </Router>\n        )\n    }\n}\n\nexport default AppRouter","import ApolloClient from 'apollo-boost'\nimport React from 'react'\nimport { ApolloProvider } from 'react-apollo'\n\nconst client = new ApolloClient({\n\turi: process.env.REACT_APP_APOLLO_URL\n})\n\nconst Apollo = ({children}) => (\n\t<ApolloProvider client={client}>\n\t\t{children}\n  \t</ApolloProvider>\n)\n\nexport default Apollo","import React, { Component } from 'react'\nimport './App.css'\nimport AppRouter from './components/AppRouter'\nimport Apollo from './components/Apollo'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Apollo>\n                        <AppRouter />\n                    </Apollo>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t  // [::1] is the IPv6 localhost address.\n\t  window.location.hostname === '[::1]' ||\n\t  // 127.0.0.1/8 is considered localhost for IPv4.\n\t  window.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t  )\n  );\n  \n  export function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t  // The URL constructor is available in all browsers that support SW.\n\t  const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t  if (publicUrl.origin !== window.location.origin) {\n\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\treturn;\n\t  }\n  \n\t  window.addEventListener('load', () => {\n\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n\t\tif (isLocalhost) {\n\t\t  // This is running on localhost. Let's check if a service worker still exists or not.\n\t\t  checkValidServiceWorker(swUrl, config);\n  \n\t\t  // Add some additional logging to localhost, pointing developers to the\n\t\t  // service worker/PWA documentation.\n\t\t  navigator.serviceWorker.ready.then(() => {\n\t\t\tconsole.log(\n\t\t\t  'This web app is being served cache-first by a service ' +\n\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t);\n\t\t  });\n\t\t} else {\n\t\t  // Is not localhost. Just register service worker\n\t\t  registerValidSW(swUrl, config);\n\t\t}\n\t  });\n\t}\n  }\n  \n  function registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t  .register(swUrl)\n\t  .then(registration => {\n\t\tregistration.onupdatefound = () => {\n\t\t  const installingWorker = registration.installing;\n\t\t  installingWorker.onstatechange = () => {\n\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t  if (navigator.serviceWorker.controller) {\n\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t// content until all client tabs are closed.\n\t\t\t\tconsole.log(\n\t\t\t\t  'New content is available and will be used when all ' +\n\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t);\n  \n\t\t\t\t// Execute callback\n\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t  config.onUpdate(registration);\n\t\t\t\t}\n\t\t\t  } else {\n\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t// It's the perfect time to display a\n\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\tconsole.log('Content is cached for offline use.');\n  \n\t\t\t\t// Execute callback\n\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t  config.onSuccess(registration);\n\t\t\t\t}\n\t\t\t  }\n\t\t\t}\n\t\t  };\n\t\t};\n\t  })\n\t  .catch(error => {\n\t\tconsole.error('Error during service worker registration:', error);\n\t  });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t  .then(response => {\n\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\tif (\n\t\t  response.status === 404 ||\n\t\t  response.headers.get('content-type').indexOf('javascript') === -1\n\t\t) {\n\t\t  // No service worker found. Probably a different app. Reload the page.\n\t\t  navigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister().then(() => {\n\t\t\t  window.location.reload();\n\t\t\t});\n\t\t  });\n\t\t} else {\n\t\t  // Service worker found. Proceed as normal.\n\t\t  registerValidSW(swUrl, config);\n\t\t}\n\t  })\n\t  .catch(() => {\n\t\tconsole.log(\n\t\t  'No internet connection found. App is running in offline mode.'\n\t\t);\n\t  });\n  }\n  \n  export function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t  navigator.serviceWorker.ready.then(registration => {\n\t\tregistration.unregister();\n\t  });\n\t}\n  }  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}